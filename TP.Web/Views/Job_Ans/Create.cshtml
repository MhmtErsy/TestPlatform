@model TP.Entities.ValueObjects.JobAnsViewModels.JobAnsViewModel
@using  TP.BusinessLayer.JobManagers
@using TP.Entities
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ 
    TestJobManager TJM = new TestJobManager();
    Test_Job tj = TJM.Find(x => x.TestJobID == Model.testjob_id);
}
<div class="container-fluid">
    <div class="col-md-2">
        @if (Session["login"] is Test_Master)
        {
            @Html.Partial("_PartialTestMasterSideNav")
        }
        @if (Session["login"] is Tester)
        {
            @Html.Partial("_PartialTesterSideNav")
        }
        @if (Session["login"] is Customer)
        {
            @Html.Partial("_PartialCustomerSideNav")
        }
        @if (Session["login"] is Admin)
        {
            @Html.Partial("_PartialAdminSideNav")
        }
    </div>
    <div class="col-md-10">
        <h2>@tj.Job_Adv.job_adv_title</h2>
        @using (Html.BeginForm("Create", "Job_Ans", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3><b>@tj.test_job_title Cevaplandırma Formu</b></h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.testjob_id)
                @Html.HiddenFor(model => model.State)
                <div class="form-group">
                    @Html.LabelFor(model => model.ans_title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ans_title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ans_title, "", new { @class = "text-danger" })
                    </div>
                </div>

               

                <div class="form-group">
                    @Html.LabelFor(model => model.ans_desc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                       @Html.TextAreaFor(model => model.ans_desc, 20, 30, htmlAttributes: new { @class = "form-control", @style = "resize:none" })
                        @Html.ValidationMessageFor(model => model.ans_desc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isSubmitted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.CheckBoxFor(model => model.isSubmitted,htmlAttributes: new { @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.isSubmitted, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Ekran Görüntüsü", htmlAttributes: new { @class = "control-label col-md-2" }))
                    <div class="col-md-8">
                        <label class="custom-file">
                            <input type="file" name="AdvImage" id="AdvImage" accept="image/*" class="form-control" />
                            <span class="custom-file-control"></span>
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Gönder" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        </div>
</div>